buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url 'https://repo.spring.io/release' }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://repo.spring.io/release" }
    }
}

plugins {
    id 'java'
    id 'maven-publish'
//    id "de.esoco.gwt" version "1.1.1"
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    // id 'org.springframework.experimental.aot' version '0.12.1'
//    id "org.springframework.cloud.contract" version "3.1.5"
    id "org.springdoc.openapi-gradle-plugin" version "1.5.0"

//    id 'org.hibernate.orm'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    google()
    maven { url 'https://repo.spring.io/release' }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/release" }
}


ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springCloudVersion', "${BOM_VERSION}")
}

//contracts {
////    contractsDslDir = file("${projectDir}/src/test/resources/contracts")
//
//    testFramework = TestFramework.JUNIT5
//    baseClassForTests "com.example.producer.BaseClass"
//}
//
//contractTest {
//    useJUnitPlatform()
//}

openApi {
    // apiDocsUrl.set("https://localhost:9000/api/docs")
    // outputDir.set(file("$buildDir/docs"))
//    delete(file("$rootDir/docs"))

    outputDir.set(file("$rootDir/docs"))
    outputFileName.set("order-service.json")
    // waitTimeInSeconds.set(10)
    // groupedApiMappings.set(["https://localhost:8080/v3/api-docs/groupA" to "swagger-groupA.json",
    //                         "https://localhost:8080/v3/api-docs/groupB" to "swagger-groupB.json"])
    // customBootRun {
    //     args.set(["--spring.profiles.active=special"])
    // }
}

//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            artifact bootJar
//
////            artifact verifierStubsJar
//
//            versionMapping {
//                usage("java-api") {
//                    fromResolutionOf("runtimeClasspath")
//                }
//                usage("java-runtime") {
//                    fromResolutionResult()
//                }
//            }
//        }
//
//    }
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.cloud:spring-cloud-function-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation 'org.codehaus.groovy:groovy-all:3.0.7'

    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.12'

    // implementation 'org.modelmapper.extensions:modelmapper-spring:3.0.0'
    // implementation 'org.modelmapper.extensions:modelmapper-jackson:3.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.4'

    implementation project(":entity")

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.kafka:spring-kafka-test'
//    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'org.springframework.security:spring-security-test'
//    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-verifier"
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"

    testImplementation 'io.rest-assured:rest-assured:4.5.1'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.5.1'
    testImplementation "io.rest-assured:json-path:4.5.1"
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'org.testcontainers:kafka:1.17.6'

    testAnnotationProcessor 'org.projectlombok:lombok'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
    imageName = "whyuenac/producer"
}
